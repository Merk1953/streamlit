
from typing import Any

import numpy as np
import pandas as pd
import streamlit as st
from streamlit.hello.utils import show_code
import os

st.set_page_config(page_title="Analyse des donnÃ©es", page_icon="ğŸ“Š")

st.image("Images/Data_analyse.png", width=400)   
st.markdown("# Analyse des donnÃ©es")
st.sidebar.header("DonnÃ©es Ã  disposition")
st.write(
    """L'Ã©tape primordiale avant une data visualisation est la comprÃ©hension des donnÃ©es : 
       nous disposions de 2 datasets avec chacun leur mÃ©tadonnÃ©es. 
""")

st.write(
    """L'un fournissant des informations sur les incidents : heure d'arrivÃ©e, type d'incident, localisation de l'incident 
    etc. et l'autre contenant des informations sur les mobilisations Ã  savoir la date d'arrivÃ©e sur les lieux de l'incident, 
    les raisons d'un Ã©ventuel retard etc. 
"""
)

st.write(
    """L'analyse des mÃ©tadonnÃ©es a permis d'aboutir aux dictionnaires de donnÃ©es prÃ©sents dans la sidebar. Il convient nÃ©anmoins 
    de rappeler que certaines fois, malgrÃ© les diffÃ©rents croisements opÃ©rÃ©s pour apprÃ©hender les variables, il n'a pas Ã©tÃ© 
    possible de les comprendre rÃ©ellement.  
"""
)

onglet_selectionne = st.sidebar.radio("SÃ©lectionner un onglet", ["Dictionnaires", "Gestion des NaN", "Statistiques descriptives"])

if onglet_selectionne == "Dictionnaires":
    choix_dictionnaire = st.radio("Dictionnaires", ["Incidents", "Mobilisations"])
    if choix_dictionnaire == "Incidents":
        st.write("#### Contenu du dictionnaire des Incidents")
        st.dataframe(pd.read_csv("Data/Incidents_dico.csv", index_col=0))

        st.write("###### La table contient 2 227 677 entrÃ©es.")
        st.write(""" Elle contient des dÃ©tails sur les incidents traitÃ©s depuis 2009.Elles incluent des informations 
        importantes telles que la date, le lieu de lâ€™incident et le type dâ€™incident traitÃ©. Cette base de donnÃ©es constituera 
        la pierre angulaire de notre analyse car elle nous permet de comprendre la nature des situations auxquelles les pompiers 
        de Londres sont confrontÃ©s.  
        Pour information, il y a une colonne supplÃ©mentaire dans la table des Incidents (39 colonnes) vs les mÃ©tadonnÃ©es 
        (38 noms de variables). 
        La derniÃ¨re colonne a donc Ã©tÃ© supprimÃ©e car elle ne semblait correspondre Ã  rien dans les mÃ©tadonnÃ©es.  
        """)
    
    elif choix_dictionnaire == "Mobilisations":
        st.write("#### Contenu du dictionnaire des Mobilisations")
        st.dataframe(pd.read_csv("Data/Mob_dico.csv", index_col=0))

        st.write("###### La table contient : 1 602 834 entrÃ©es.")
        st.write(""" Le deuxiÃ¨me jeu de donnÃ©es fournit des informations sur chaque camion de pompiers envoyÃ© sur les lieux dâ€™un incident depuis janvier 2009. Il inclut 
                notamment des dÃ©tails sur lâ€™appareil mobilisÃ©, son lieu de dÃ©ploiement et les heures dâ€™arrivÃ©es sur les lieux de 
                lâ€™incident.  
        """)

elif onglet_selectionne == "Gestion des NaN":    
    choix_gestion_nan = st.radio("Gestion des NaN", ["Incidents", "Mobilisations", "SynthÃ¨se"])
    st.write("""Le pourcentage global des valeurs manquantes pour les incidents est de 12.57% 
             et est  un peu plus bas pour les mobilisations avec 9.66%. Une vision plus dÃ©taillÃ©e, 
             au niveau variable est nÃ©cessaire.""")
    if choix_gestion_nan == "Incidents":
        st.write("#### Analyse des valeurs manquantes dans la table des Incidents")
        st.write(""" On peut classer les NAs en 3 groupes Ã  savoir le groupe de ceux qui ont une valeur trÃ¨s faible (infÃ©rieure 
                 Ã  1%), le groupe de ceux qui ont valeur faible (entre 1 et 15%) et le groupe de ceux qui ont une valeur de NA 
                 significative (plus de 40%) :""")
        st.write("##### Groupe des variables avec un pourcentage de NaN infÃ©rieur Ã  1%")
        st.dataframe(pd.read_csv("Data/NaN/Inc_1.csv", index_col=0))

        st.write("##### Groupe des variables avec un pourcentage de NaN compris entre 1 et 15%")
        st.dataframe(pd.read_csv("Data/NaN/Inc_2.csv", index_col=0))

        st.write("##### Groupe des variables avec un pourcentage de NaN supÃ©rieur Ã  40%")
        st.dataframe(pd.read_csv("Data/NaN/Inc_3.csv", index_col=0))

        st.write("*[1] Il s'agit de la variable Ã  modÃ©liser*")

    elif choix_gestion_nan == "Mobilisations":
        st.write("#### Analyse des valeurs manquantes dans la table des Mobilisations")
        st.write("""La rÃ©partition des NAs dans le dataset Â« Mobilisations Â» laisse apparaitre une polarisation en ce sens 
                 que lâ€™on a soit de trÃ¨s petites valeurs de NA, entre 0 et 2 %, soit de trÃ¨s grandes valeurs, supÃ©rieures Ã  50%.""") 
        
        st.write("##### Groupe des variables avec un pourcentage de NaN compris entre 0 et 2%")
        st.dataframe(pd.read_csv("Data/NaN/Mob_1.csv", index_col=0))

        st.write("##### Groupe des variables avec un pourcentage de NaN supÃ©rieur Ã  50%")
        st.dataframe(pd.read_csv("Data/NaN/Mob_2.csv", index_col=0))


    elif choix_gestion_nan == "SynthÃ¨se":
        st.write("#### SynthÃ¨se sur les valeurs manquantes")
        st.write(" La rÃ¨gle de gestion est la suivante :")
        st.write("- TrÃ¨s faibles valeurs de NaN => suppression des lignes concernÃ©es")
        st.write("- TrÃ¨s fortes valeurs de NaN => suppression des variables concernÃ©es")
        st.write("De plus, parfois certaines variables sont redondantes et apportent la mÃªme information.")
        st.write("Voici donc un tableau rÃ©capitulatif qui reprend la liste des variables dont on se sÃ©pare et en dÃ©taille les raisons :")
        st.dataframe(pd.read_csv("Data/NaN/Synt_na.csv", index_col=0))

elif onglet_selectionne == "Statistiques descriptives":    
    choix_gestion_stat = st.radio("Tableau rÃ©capitulatif", ["Incidents", "Mobilisations"])

    if choix_gestion_stat == "Incidents":
        st.dataframe(pd.read_csv("Data/Stat_desc_inc.csv", index_col=0))
        st.write("""On constate  quâ€™en moyenne,  les pompiers mettent 5.25 minutes Ã  arriver sur les lieux de lâ€™incident et 
                 quâ€™il faut que 1.3 stations envoient un contingent et que cela reprÃ©sente 1.5 camions. 
                La mÃ©diane du temps dâ€™intervention reste proche de la moyenne ce qui suggÃ¨re mois dâ€™asymÃ©trie des donnÃ©es. 
                La moyenne Ã©tant une mesure de centralitÃ© qui est sensible aux valeurs extrÃªmes et la mÃ©diane Ã©tant plus robuste aux valeurs extrÃªmes, leur proximitÃ© suggÃ¨re que les valeurs aberrantes nâ€™ont pas un impact significatif sur la mesure de la centralitÃ© en ce qui concerne le temps dâ€™arrivÃ©e. 
""")
        
    if choix_gestion_stat == "Mobilisations":
        st.dataframe(pd.read_csv("Data/Stat_desc_mob.csv", index_col=0))
        st.write(""" On constate que la moyenne du temps dâ€™intervention de la table des Mobilisations est sensiblement proche 
                 de celle de la table des Incidents. Il y va de mÃªme pour la mÃ©diane. 
                 Les valeurs de la table des Mobilisations semblent juste un peu au-dessus de la celle des Incidents. 	
                 On constate Ã©galement que Attendance time  = Turnout time + Travel time Ã  savoir Temps dâ€™intervention = Temps de 
                 trajet + Temps de sortie de la station. 
                 La variable qui contribue le plus au temps dâ€™intervention semble Ãªtre le temps de trajet. 
                 Les distributions des variables communes aux deux tables semblent similaires. 
""")